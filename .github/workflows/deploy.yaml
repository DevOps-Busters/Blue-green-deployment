name: Deploy Blue-Green

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Minikube
      run: |
        curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
        chmod +x minikube
        sudo mv minikube /usr/local/bin/

    - name: Start Minikube
      run: |
        minikube start --driver=docker --force
        minikube status

    - name: Configure kubectl for Minikube
      run: |
        minikube update-context
        kubectl cluster-info
        kubectl get nodes

    - name: Install Helm
      run: |
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

    - name: Login to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build and push Docker images
      run: |
        eval $(minikube docker-env)  # Use Minikube’s Docker daemon
        docker build -t apoorv0001/app:blue .
        docker push apoorv0001/app:blue
        docker build -t apoorv0001/app:green .
        docker push apoorv0001/app:green

    - name: Set Deployment Version
      run: |
        CURRENT_VERSION=$(kubectl get deployment app-blue -o jsonpath='{.metadata.name}' 2>/dev/null || echo "not_found")
        if [[ "$CURRENT_VERSION" == "not_found" ]]; then
          NEW_VERSION="blue"
        else
          NEW_VERSION="green"
        fi
        echo "DEPLOY_VERSION=$NEW_VERSION" >> $GITHUB_ENV

    - name: Deploy with Helm
      run: |
        helm upgrade --install blue-green-app helm/ --set activeVersion=${{ env.DEPLOY_VERSION }}

    # ✅ Step 1: Verify Deployments, Pods, and Services
    - name: Verify Kubernetes Deployment
      run: |
        echo "Checking Kubernetes resources..."
        kubectl get pods -n default
        kubectl get services -n default
        kubectl get deployments -n default

    # ✅ Step 2: Port Forward Service for Testing
    - name: Port Forward Service
      run: |
        kubectl port-forward service/blue-green-app 8080:80 &
        sleep 5  # Give it time to start

    # ✅ Step 3: Test Application Response
    - name: Test Application
      run: |
        curl -v http://localhost:8080 || echo "Application did not respond"

    # ✅ Step 4: Fetch Logs for Debugging (if needed)
    - name: Get Pod Logs
      run: |
        kubectl logs -l app=blue-green-app --tail=50 || echo "No logs found"
